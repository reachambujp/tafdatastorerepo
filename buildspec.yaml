version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging into Docker Hub...
      - DOCKER_PASSWORD=Ambuj@1984
      - DOCKER_USERNAME=ambujp28
      - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
      - echo Logging in to Amazon ECR...
      - AWS_REGION=us-east-2
      - AWS_ACCOUNT_ID=058264105207
      - echo accountID- $AWS_ACCOUNT_ID
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo Granting execution permissions to Gradle wrapper...
      - chmod +x ./gradlew
      - echo Cleaning up previous builds...
      - ./gradlew clean

  build:
    commands:
      - echo Building the application with Gradle...
      - ./gradlew build
      - echo Building the Docker image...
      - IMAGE_REPO_NAME=tafdatastore-repo
      - IMAGE_TAG=latest
      - echo img-repo-name $IMAGE_REPO_NAME
      - echo img-tag $IMAGE_TAG
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .

  post_build:
    commands:
      - echo Tagging the Docker image...
      - echo post-build img-repo $IMAGE_REPO_NAME
      - echo post-build accID $AWS_ACCOUNT_ID and region $AWS_REGION
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Pushing the Docker image to AWS ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Writing image definitions file...
      - REPOSITORY_URI=058264105207.dkr.ecr.us-east-2.amazonaws.com/tafdatastore-repo
      - printf '[{"name":"tafdatastore-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Writing image definitions file...
      - # add your container name
      - DOCKER_CONTAINER_NAME=tafdatastore-container
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Build process completed successfully.

artifacts:
  files:
    - build/libs/*.jar
    - imagedefinitions.json
  discard-paths: yes